<!-- Flutter Clean Architecture — layered diagram (SVG, scalable, accessible) -->
<svg xmlns="http://www.w3.org/2000/svg" width="1200" height="760" viewBox="0 0 1200 760" role="img" aria-labelledby="title desc">
  <title id="title">Flutter Clean Architecture Diagram</title>
  <desc id="desc">Presentation → Domain → Data → Core layers with explicit responsibilities and data flow. External systems: HTTP (Dio) and Local Storage.</desc>

  <!-- Background -->
  <defs>
    <linearGradient id="bg" x1="0" y1="0" x2="1" y2="1">
      <stop offset="0%" stop-color="#0B1220"/>
      <stop offset="100%" stop-color="#0D1117"/>
    </linearGradient>

    <!-- Card shadow -->
    <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="0" dy="8" stdDeviation="12" flood-color="rgba(0,0,0,0.25)"/>
    </filter>

    <!-- Arrow marker -->
    <marker id="arrow" viewBox="0 0 10 10" refX="9" refY="5" markerWidth="10" markerHeight="10" orient="auto-start-reverse">
      <path d="M0,0 L10,5 L0,10 z" fill="#B0BEC5"/>
    </marker>

    <!-- Palette -->
    <style><![CDATA[
      .title { fill:#E3F2FD; font: 700 28px 'Inter', system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; }
      .subtitle { fill:#B0BEC5; font: 400 16px 'Inter', system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; }
      .label { fill:#ECEFF1; font: 600 18px 'Inter', system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; }
      .small { fill:#CFD8DC; font: 400 14px 'Inter', system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; }
      .mono { fill:#CFD8DC; font: 600 14px ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; }

      .card { rx:18; filter:url(#shadow); stroke-width:1; }
      .presentation { fill:#0F2340; stroke:#1A3C66; }
      .domain { fill:#0E2A22; stroke:#1B5E20; }
      .data { fill:#2A220A; stroke:#8D6E00; }
      .core { fill:#1A2226; stroke:#37474F; }

      .ext { fill:#0F1115; stroke:#455A64; rx:14; }
      .chip { fill:#111826; stroke:#1F2A44; rx:10; }

      .arrow { stroke:#B0BEC5; stroke-width:2; fill:none; marker-end:url(#arrow); }
    ]]></style>
  </defs>

  <!-- BG -->
  <rect x="0" y="0" width="1200" height="760" fill="url(#bg)"/>

  <!-- Header -->
  <text x="600" y="56" text-anchor="middle" class="title">Flutter Clean Architecture</text>
  <text x="600" y="84" text-anchor="middle" class="subtitle">Presentation → Domain → Data → Core • MVVM, BLoC/Riverpod • Dio, get_it, fpdart</text>

  <!-- Core (bottom) -->
  <g transform="translate(60,560)">
    <rect class="card core" width="1080" height="140"/>
    <text x="24" y="36" class="label">Core</text>
    <text x="24" y="66" class="small">DI (get_it) • Error handling • Logger • Config • NetworkInfo</text>

    <!-- core chips -->
    <g transform="translate(780,20)">
      <rect class="chip" width="120" height="36"/>
      <text x="12" y="24" class="mono">get_it</text>
    </g>
    <g transform="translate(910,20)">
      <rect class="chip" width="120" height="36"/>
      <text x="12" y="24" class="mono">fpdart</text>
    </g>
  </g>

  <!-- Data -->
  <g transform="translate(60,390)">
    <rect class="card data" width="1080" height="150"/>
    <text x="24" y="36" class="label">Data</text>
    <text x="24" y="66" class="small">Repositories (impl) • Data Sources (Remote/Local) • DTOs • Mappers</text>

    <!-- columns -->
    <g transform="translate(24,86)">
      <rect class="ext" width="220" height="44"/>
      <text x="12" y="28" class="mono">RepositoryImpl</text>
    </g>
    <g transform="translate(264,86)">
      <rect class="ext" width="220" height="44"/>
      <text x="12" y="28" class="mono">RemoteDataSource (Dio)</text>
    </g>
    <g transform="translate(504,86)">
      <rect class="ext" width="220" height="44"/>
      <text x="12" y="28" class="mono">LocalDataSource</text>
    </g>
    <g transform="translate(744,86)">
      <rect class="ext" width="296" height="44"/>
      <text x="12" y="28" class="mono">Models / DTOs • Mapping to Entities</text>
    </g>
  </g>

  <!-- Domain -->
  <g transform="translate(60,240)">
    <rect class="card domain" width="1080" height="130"/>
    <text x="24" y="36" class="label">Domain</text>
    <text x="24" y="66" class="small">Entities • UseCases • Repository (abstraction)</text>

    <g transform="translate(24,80)">
      <rect class="ext" width="220" height="38"/>
      <text x="12" y="25" class="mono">Entities</text>
    </g>
    <g transform="translate(264,80)">
      <rect class="ext" width="220" height="38"/>
      <text x="12" y="25" class="mono">UseCases</text>
    </g>
    <g transform="translate(504,80)">
      <rect class="ext" width="300" height="38"/>
      <text x="12" y="25" class="mono">Repository (interface)</text>
    </g>
  </g>

  <!-- Presentation -->
  <g transform="translate(60,90)">
    <rect class="card presentation" width="1080" height="120"/>
    <text x="24" y="36" class="label">Presentation</text>
    <text x="24" y="66" class="small">Widgets • ViewModels / Cubits • Pages</text>

    <g transform="translate(24,80)">
      <rect class="ext" width="240" height="30"/>
      <text x="12" y="21" class="mono">Widgets / Pages</text>
    </g>
    <g transform="translate(284,80)">
      <rect class="ext" width="260" height="30"/>
      <text x="12" y="21" class="mono">ViewModel / Cubit (BLoC | Riverpod)</text>
    </g>
    <g transform="translate(564,80)">
      <rect class="ext" width="220" height="30"/>
      <text x="12" y="21" class="mono">State &amp; Effects</text>
    </g>
  </g>

  <!-- External Systems (right) -->
  <g transform="translate(955,220)">
    <rect class="ext" width="185" height="60"/>
    <text x="12" y="36" class="mono">HTTP API (Dio)</text>
  </g>
  <g transform="translate(955,300)">
    <rect class="ext" width="185" height="60"/>
    <text x="12" y="36" class="mono">Local Storage</text>
  </g>

  <!-- Arrows downwards -->
  <path class="arrow" d="M600,210 L600,232"/>
  <path class="arrow" d="M600,370 L600,388"/>
  <path class="arrow" d="M600,540 L600,558"/>

  <!-- Arrows to externals -->
  <path class="arrow" d="M900,445 C980,445 980,250 955,250"/>
  <path class="arrow" d="M870,485 C980,485 980,330 955,330"/>

  <!-- Notes -->
  <text x="60" y="730" class="small">Guiding principles: UI depends on Domain, Domain is pure, Data implements Repository interfaces, Core provides cross-cutting concerns.</text>
</svg>
